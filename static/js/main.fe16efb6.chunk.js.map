{"version":3,"sources":["Components/UI/SearchBar/search-bar.jsx","Components/Layout/Header/header.jsx","Components/UI/Card/overlay.jsx","Components/UI/Card/card.jsx","Components/Layout/Body/body.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","Autocomplete","id","options","title","latitude","longitude","getOptionLabel","option","style","width","renderInput","params","TextField","label","onChange","event","values","parentCallback","getOptionSelected","value","Header","useState","location","setLocation","Grid","item","xs","align","childData","Button","variant","color","margin","onClick","onHeaderChange","PolylineOverlay","height","ctx","isDragging","project","unproject","this","points","lineWidth","renderWhileDragging","clearRect","globalCompositeOperation","strokeStyle","beginPath","forEach","point","pixel","lineTo","stroke","redraw","_redraw","bind","PureComponent","weatherCheck","createStars","solidRating","fadedRating","rating","i","push","length","rotateSwellArrow","degrees","transform","rotateWindArrow","Card","pushMap","pushDayMonth","pushTimespot","pushConditionRating","pushFadedRating","pushSolidRating","pushMinHeight","pushMaxHeight","pushUnit","pushPrimaryHeight","pushPrimaryPeriod","pushPrimaryDirection","pushSecondaryHeight","pushSecondaryPeriod","pushSecondaryDirection","pushWindSpeed","pushWindDirection","pushWindUnit","pushWindChill","pushTemp","pushTimespot1","pushConditionRating1","pushFadedRating1","pushSolidRating1","pushMinHeight1","pushMaxHeight1","pushUnit1","pushPrimaryHeight1","pushPrimaryPeriod1","pushPrimaryDirection1","pushSecondaryHeight1","pushSecondaryPeriod1","pushSecondaryDirection1","pushWindSpeed1","pushWindDirection1","pushTemp1","pushWindChill1","pushWindUnit1","pushTimespot2","pushConditionRating2","pushFadedRating2","pushSolidRating2","pushMinHeight2","pushMaxHeight2","pushUnit2","pushPrimaryHeight2","pushPrimaryPeriod2","pushPrimaryDirection2","pushSecondaryHeight2","pushSecondaryPeriod2","pushSecondaryDirection2","pushWindSpeed2","pushWindDirection2","pushTemp2","pushWindChill2","pushWindUnit2","pushTimespot3","pushConditionRating3","pushFadedRating3","pushSolidRating3","pushMinHeight3","pushMaxHeight3","pushPrimaryHeight3","pushUnit3","pushPrimaryPeriod3","pushPrimaryDirection3","pushSecondaryHeight3","pushSecondaryPeriod3","pushSecondaryDirection3","pushWindSpeed3","pushWindDirection3","pushTemp3","pushWindChill3","pushWindUnit3","pushTimespot4","pushConditionRating4","pushFadedRating4","pushSolidRating4","pushMinHeight4","pushMaxHeight4","pushPrimaryHeight4","pushUnit4","pushPrimaryPeriod4","pushPrimaryDirection4","pushSecondaryHeight4","pushSecondaryPeriod4","pushSecondaryDirection4","pushWindSpeed4","pushWindDirection4","pushTemp4","pushWindChill4","pushWindUnit4","zoom","mapInfo","setMapInfo","userLocation","setUserLocation","mapRoute","setMapRoute","tripDuration","setTripDuration","useEffect","startLongitude","startLatitude","endLongitude","endLatitude","a","url","process","fetch","data","json","response","routes","geometry","coordinates","Math","floor","duration","console","log","getRoute","Box","className","container","padding","backgroundColor","boxShadow","borderRadius","marginBottom","mapboxApiAccessToken","onViewportChange","viewport","positionOptions","enableHighAccuracy","trackUserLocation","auto","src","alt","justify","maxWidth","List","ListItem","ListItemText","primary","float","ListItemIcon","Body","pushSurfSpot","pushMapInfo","dayMonth","localTimestamp0","conditionRating0","fadedRating0","solidRating0","minBreakingHeight0","maxBreakingHeight0","unit","primaryHeight0","primaryPeriod0","primaryDirection0","pushPrimaryCompass","primaryCompassDirection0","secondaryHeight0","secondaryPeriod0","secondaryDirection0","pushSecondaryCompassDirection","secondaryCompassDirection0","windSpeed0","windDirection0","pushWindCompass","windCompassDirection0","windChill0","windUnit","temperature0","pushTempUnit","temperatureUnit","localTimestamp1","conditionRating1","fadedRating1","solidRating1","minBreakingHeight1","maxBreakingHeight1","primaryHeight1","primaryPeriod1","primaryDirection1","pushPrimaryCompass1","primaryCompassDirection1","secondaryHeight1","secondaryPeriod1","secondaryDirection1","pushSecondaryCompassDirection1","secondaryCompassDirection1","windSpeed1","windDirection1","pushWindCompass1","windCompassDirectio1","windChill1","temperature1","pushTempUnit1","localTimestamp2","conditionRating2","fadedRating2","solidRating2","minBreakingHeight2","maxBreakingHeight2","primaryHeight2","primaryPeriod2","primaryDirection2","pushPrimaryCompass2","primaryCompassDirection2","secondaryHeight2","secondaryPeriod2","secondaryDirection2","pushSecondaryCompassDirection2","secondaryCompassDirection2","windSpeed2","windDirection2","pushWindCompass2","windCompassDirection2","windChill2","temperature2","pushTempUnit2","localTimestamp3","conditionRating3","fadedRating3","solidRating3","minBreakingHeight3","maxBreakingHeight3","primaryHeight3","primaryPeriod3","primaryDirection3","pushPrimaryCompass3","primaryCompassDirection3","secondaryHeight3","secondaryPeriod3","secondaryDirection3","pushSecondaryCompassDirection3","secondaryCompassDirection3","windSpeed3","windDirection3","pushWindCompass3","windCompassDirection3","windChill3","temperature3","pushTempUnit3","localTimestamp4","conditionRating4","fadedRating4","solidRating4","minBreakingHeight4","maxBreakingHeight4","primaryHeight4","primaryPeriod4","primaryDirection4","pushPrimaryCompass4","primaryCompassDirection4","secondaryHeight4","secondaryPeriod4","secondaryDirection4","pushSecondaryCompassDirection4","secondaryCompassDirection4","windSpeed4","windDirection4","pushWindCompass4","windCompassDirection4","windChill4","temperature4","pushTempUnit4","getHours","time","dateObject","Date","hours","am_pm","getDayMonth","day","getDate","month","getMonth","App","spotID","setspotID","windCompassDirection1","surfSpot","setSurfSpot","realURL","localTimestamp","swell","minBreakingHeight","maxBreakingHeight","components","period","direction","compassDirection","secondary","wind","speed","chill","condition","temperature","weather","fetchData","spacing","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fe16efb6.chunk.js","sourcesContent":["import React from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./search-bar.css\";\n\nfunction SearchBar(props) {\n  const exampleSpots = [\n    {\n      title: \"Linda Mar\",\n      id: \"819\",\n      latitude: 37.598932,\n      longitude: -122.501738,\n    },\n    {\n      title: \"Ocean Beach\",\n      id: \"255\",\n      latitude: 37.759473,\n      longitude: -122.5107,\n    },\n  ];\n\n  function handleTextFieldChange(event, values) {\n    props.parentCallback(values);\n  }\n\n  return (\n    <Autocomplete\n      id=\"combo-box\"\n      options={exampleSpots}\n      getOptionLabel={(option) => option.title}\n      style={{ width: 200 }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Surf Spots\"></TextField>\n      )}\n      onChange={handleTextFieldChange}\n      getOptionSelected={(option, value) => option.title === value.title}\n    />\n  );\n}\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport SearchBar from \"../../UI/SearchBar/search-bar.jsx\";\nimport DateBox from \"../../UI/Date/date.jsx\";\n\nimport \"./header.jsx\";\n\nfunction Header(props) {\n  const [location, setLocation] = useState(\"Default\");\n\n  function callBackFunction(childData) {\n    //Sets location to the title value\n    setLocation(childData);\n  }\n\n  return (\n    <Grid item xs={12} align=\"center\">\n      <p>Type in where you want to go, see if you should</p>\n      <h1>Gnar Report</h1>\n      <SearchBar parentCallback={callBackFunction} />\n      {/* <p>Where are you going</p>\n      <DateBox /> */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: \"20px\" }}\n        onClick={() => props.onHeaderChange(location)}\n      >\n        Lets Go\n      </Button>\n    </Grid>\n  );\n}\n\nexport default Header;\n","import React, { PureComponent } from 'react'\nimport { CanvasOverlay } from 'react-map-gl'\n\nexport default class PolylineOverlay extends PureComponent {\n  _redraw ({ width, height, ctx, isDragging, project, unproject }) {\n    const { points, color = 'black', lineWidth = 2, renderWhileDragging = true } = this.props\n    ctx.clearRect(0, 0, width, height)\n    ctx.globalCompositeOperation = 'lighter'\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth\n      ctx.strokeStyle = color\n      ctx.beginPath()\n      points.forEach(point => {\n        const pixel = project([point[0], point[1]])\n        ctx.lineTo(pixel[0], pixel[1])\n      })\n      ctx.stroke()\n    }\n  }\n\n  render () {\n    return <CanvasOverlay redraw={this._redraw.bind(this)} />\n  }\n}","import React, { useState, useEffect } from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport StarTwoToneIcon from \"@material-ui/icons/StarTwoTone\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\n\nimport ReactMapGL, { Marker, GeolocateControl } from \"react-map-gl\";\nimport PolylineOverlay from \"../Card/overlay.jsx\";\n\nimport \"./card.css\";\n\n//Checks Weather\nfunction weatherCheck(id) {\n  switch (id) {\n    case \"18\":\n    case \"28\":\n    case \"9\":\n      return \"/Images/thunder.svg\";\n\n    case \"10\":\n    case \"20\":\n      return \"/Images/cloudynew.svg\";\n    case \"22\":\n      return \"/Images/drizzle.svg\";\n    case \"21\":\n    case \"23\":\n    case \"24\":\n      return \"/Images/rain.svg\";\n\n    case \"1\":\n    case \"11\":\n    case \"19\":\n    case \"2\":\n    case \"30\":\n    case \"31\":\n    case \"32\":\n    case \"33\":\n    case \"34\":\n    case \"35\":\n      return \"/Images/cloud-sun.svg\";\n    default:\n      return \"No ID found\";\n  }\n}\n\n//Creates Stars\nfunction createStars(solidRating, fadedRating) {\n  let rating = [];\n\n  for (let i = 0; i < solidRating; i++) {\n    rating.push(<StarIcon style={{ color: \"#64b5f6\" }} />);\n  }\n\n  for (let i = 0; i < fadedRating; i++) {\n    rating.push(<StarTwoToneIcon style={{ color: \"#90caf9\" }} />);\n  }\n\n  while (rating.length < 5) {\n    rating.push(<StarBorderIcon />);\n  }\n\n  return <div>{rating}</div>;\n}\n\n//Rotates Swell Arrows\nfunction rotateSwellArrow(degrees) {\n  return (\n    <NavigationIcon\n      style={{ transform: `rotate(${degrees + \"deg\"})`, color: \"black\" }}\n    ></NavigationIcon>\n  );\n}\n\n//Rotates Wind Arrows\nfunction rotateWindArrow(degrees) {\n  return (\n    <ArrowUpwardIcon\n      style={{ transform: `rotate(${degrees + \"deg\"})`, color: \"black\" }}\n    ></ArrowUpwardIcon>\n  );\n}\n\n//Creates Card\nfunction Card(props) {\n  const { pushMap } = props;\n\n  const {\n    pushDayMonth,\n\n    pushTimespot,\n    pushConditionRating,\n    pushFadedRating,\n    pushSolidRating,\n    pushMinHeight,\n    pushMaxHeight,\n    pushUnit,\n    pushPrimaryHeight,\n    pushPrimaryPeriod,\n    pushPrimaryDirection,\n    pushSecondaryHeight,\n    pushSecondaryPeriod,\n    pushSecondaryDirection,\n    pushWindSpeed,\n    pushWindDirection,\n    pushWindChill,\n    pushWindUnit,\n    pushTemp,\n\n    pushTimespot1,\n    pushConditionRating1,\n    pushFadedRating1,\n    pushSolidRating1,\n    pushMinHeight1,\n    pushMaxHeight1,\n    pushUnit1,\n    pushPrimaryHeight1,\n    pushPrimaryPeriod1,\n    pushPrimaryDirection1,\n    pushSecondaryHeight1,\n    pushSecondaryPeriod1,\n    pushSecondaryDirection1,\n    pushWindSpeed1,\n    pushWindDirection1,\n    pushWindChill1,\n    pushWindUnit1,\n    pushTemp1,\n\n    pushTimespot2,\n    pushConditionRating2,\n    pushFadedRating2,\n    pushSolidRating2,\n    pushMinHeight2,\n    pushMaxHeight2,\n    pushUnit2,\n    pushPrimaryHeight2,\n    pushPrimaryPeriod2,\n    pushPrimaryDirection2,\n    pushSecondaryHeight2,\n    pushSecondaryPeriod2,\n    pushSecondaryDirection2,\n    pushWindSpeed2,\n    pushWindDirection2,\n    pushWindChill2,\n    pushWindUnit2,\n    pushTemp2,\n\n    pushTimespot3,\n    pushConditionRating3,\n    pushFadedRating3,\n    pushSolidRating3,\n    pushMinHeight3,\n    pushMaxHeight3,\n    pushUnit3,\n    pushPrimaryHeight3,\n    pushPrimaryPeriod3,\n    pushPrimaryDirection3,\n    pushSecondaryHeight3,\n    pushSecondaryPeriod3,\n    pushSecondaryDirection3,\n    pushWindSpeed3,\n    pushWindDirection3,\n    pushWindChill3,\n    pushWindUnit3,\n    pushTemp3,\n\n    pushTimespot4,\n    pushConditionRating4,\n    pushFadedRating4,\n    pushSolidRating4,\n    pushMinHeight4,\n    pushMaxHeight4,\n    pushUnit4,\n    pushPrimaryHeight4,\n    pushPrimaryPeriod4,\n    pushPrimaryDirection4,\n    pushSecondaryHeight4,\n    pushSecondaryPeriod4,\n    pushSecondaryDirection4,\n    pushWindSpeed4,\n    pushWindDirection4,\n    pushWindChill4,\n    pushWindUnit4,\n    pushTemp4,\n  } = props;\n\n  //Coordinates of the surf spot\n  const [mapInfo, setMapInfo] = useState({\n    latitude: 0,\n    longitude: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zoom: 10,\n  });\n\n  //Coordinates of the user\n  const [userLocation, setUserLocation] = useState({\n    latitude: 0,\n    longitude: 0,\n  });\n\n  //Coordinates of Map Route Coordinates\n  const [mapRoute, setMapRoute] = useState();\n\n  //Map Timer\n  const [tripDuration, setTripDuration] = useState();\n\n  //Gets Route Info\n  useEffect(() => {\n    async function getRoute(\n      startLongitude,\n      startLatitude,\n      endLongitude,\n      endLatitude\n    ) {\n      try {\n        const url = `https://api.mapbox.com/directions/v5/mapbox/driving-traffic/${startLongitude},${startLatitude};${endLongitude},${endLatitude}?steps=true&geometries=geojson&access_token=${process.env.REACT_APP_MAPBOX}`;\n\n        const data = await fetch(url);\n        const response = await data.json();\n\n        setMapRoute(response.routes[0].geometry.coordinates);\n        setTripDuration(Math.floor(response.routes[0].duration / 60));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getRoute(\n      userLocation.longitude,\n      userLocation.latitude,\n      pushMap.longitude,\n      pushMap.latitude\n    );\n  }, [\n    userLocation.longitude,\n    userLocation.latitude,\n    pushMap.longitude,\n    pushMap.latitude,\n  ]);\n\n  useEffect(() => {\n    setMapInfo({\n      latitude: pushMap.latitude,\n      longitude: pushMap.longitude,\n      width: \"100%\",\n      height: \"100%\",\n      zoom: 10,\n    });\n  }, [pushMap.latitude, pushMap.longitude]);\n\n  return (\n    <Box className=\"Box\">\n      <Grid\n        item\n        container\n        xs={12}\n        className=\"Main-Grid\"\n        style={{\n          padding: \"15px 15px\",\n          backgroundColor: \"white\",\n          margin: \"auto\",\n          width: \"95%\",\n          boxShadow:\n            \"0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22)\",\n          borderRadius: \"16px\",\n        }}\n      >\n        <Grid item container xs={3}>\n          <Grid\n            item\n            xs={12}\n            className=\"Card-Item\"\n            style={{ marginBottom: \"20px\", height: \"300px\" }}\n          >\n            <h1>Traffic Report</h1>\n            <h2>Time to Destination:</h2>\n            <h2>{tripDuration} Minutes</h2>\n          </Grid>\n\n          <Grid item xs={12} style={{}} className=\"MapBox\">\n            <ReactMapGL\n              mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\n              {...mapInfo}\n              onViewportChange={(viewport) => setMapInfo(viewport)}\n              height=\"400px\"\n            >\n              <PolylineOverlay points={mapRoute}></PolylineOverlay>\n              <GeolocateControl\n                positionOptions={{ enableHighAccuracy: true }}\n                trackUserLocation={false}\n                onViewportChange={(viewport) =>\n                  setUserLocation({\n                    latitude: viewport.latitude,\n                    longitude: viewport.longitude,\n                  })\n                }\n                auto={true}\n              ></GeolocateControl>\n              {/* Ternary operator is used below to only load the marker after the user has selected the surf spot. Otherwise, because the lat/long are undefined the Marker errors out */}\n              {pushMap.longitude ? (\n                <Marker\n                  latitude={pushMap.latitude}\n                  longitude={pushMap.longitude}\n                  zoom={mapInfo.zoom}\n                >\n                  <img\n                    src=\"../Images/map.svg\"\n                    alt=\"Destination\"\n                    height=\"20px\"\n                    width=\"20px\"\n                  ></img>\n                </Marker>\n              ) : (\n                <div></div>\n              )}\n            </ReactMapGL>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          container\n          xs={9}\n          style={{ padding: \"15px 15px\" }}\n          justify={\"space-between\"}\n        >\n          <Grid item xs={12} style={{}}>\n            <h1>Surf Report</h1>\n            <h3>{pushDayMonth}</h3>\n          </Grid>\n\n          {/* First Cell */}\n          <Grid\n            container\n            item\n            xs={6}\n            style={{ maxWidth: \"49.5%\" }}\n            className=\"Card-Item\"\n          >\n            <Grid item xs={4}>\n              <p>{pushTimespot}</p>\n              <img\n                src={weatherCheck(pushConditionRating)}\n                alt=\"\"\n                height=\"100px\"\n                width=\"100px\"\n              ></img>\n              <p>{pushTemp + \"f\"}</p>\n            </Grid>\n            <Grid container item xs={8}>\n              <Grid item xs={12}>\n                <List>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${pushMinHeight}-${pushMaxHeight}${pushUnit}`}\n                      style={{ float: \"left\" }}\n                    />\n                    {createStars(pushSolidRating, pushFadedRating)}\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Primary Swell\" />\n                    <ListItemText\n                      primary={`${pushPrimaryHeight}ft at ${pushPrimaryPeriod}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushPrimaryDirection)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Secondary Swell\"></ListItemText>\n                    <ListItemText\n                      primary={`${pushSecondaryHeight}ft at ${pushSecondaryPeriod}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushSecondaryDirection)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Wind Direction\" />\n                    <ListItemText primary={`${pushWindSpeed}${pushWindUnit}`} />\n                    <ListItemIcon>\n                      {rotateWindArrow(pushWindDirection)}\n                    </ListItemIcon>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/* Second Cell */}\n          <Grid\n            container\n            item\n            xs={6}\n            style={{ maxWidth: \"49.5%\" }}\n            className=\"Card-Item\"\n          >\n            <Grid item xs={4}>\n              <p>{pushTimespot1}</p>\n              <img\n                src={weatherCheck(pushConditionRating1)}\n                alt=\"\"\n                height=\"100px\"\n                width=\"100px\"\n              ></img>\n              <p>{pushTemp1 + \"f\"}</p>\n            </Grid>\n            <Grid container item xs={8}>\n              <Grid item xs={12}>\n                <List>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${pushMinHeight1}-${pushMaxHeight1}${pushUnit1}`}\n                      style={{ float: \"left\" }}\n                    />\n                    {createStars(pushSolidRating1, pushFadedRating1)}\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Primary Swell\" />\n                    <ListItemText\n                      primary={`${pushPrimaryHeight1}ft at ${pushPrimaryPeriod1}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushPrimaryDirection1)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Secondary Swell\" />\n                    <ListItemText\n                      primary={`${pushSecondaryHeight1}ft at ${pushSecondaryPeriod1}s `}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushSecondaryDirection1)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Wind Direction\" />\n                    <ListItemText primary={`${pushWindSpeed1}mph`} />\n                    <ListItemIcon>\n                      {rotateWindArrow(pushWindDirection1)}\n                    </ListItemIcon>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/* Third Cell */}\n          <Grid\n            container\n            item\n            xs={6}\n            style={{ maxWidth: \"49.5%\" }}\n            className=\"Card-Item\"\n          >\n            <Grid item xs={4}>\n              <p>{pushTimespot2}</p>\n              <img\n                src={weatherCheck(pushConditionRating2)}\n                alt=\"\"\n                height=\"100px\"\n                width=\"100px\"\n              ></img>\n              <p>{pushTemp2 + \"f\"}</p>\n            </Grid>\n            <Grid container item xs={8}>\n              <Grid item xs={12}>\n                <List>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${pushMinHeight2}-${pushMaxHeight2}${pushUnit2}`}\n                      style={{ float: \"left\" }}\n                    />\n                    {createStars(pushSolidRating2, pushFadedRating2)}\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Primary Swell\" />\n                    <ListItemText\n                      primary={`${pushPrimaryHeight2}ft at ${pushPrimaryPeriod2}s `}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushPrimaryDirection2)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Secondary Swell\" />\n                    <ListItemText\n                      primary={`${pushSecondaryHeight2}ft at ${pushSecondaryPeriod2}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushSecondaryDirection2)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Wind Direction\" />\n                    <ListItemText primary={`${pushWindSpeed2}mph`} />\n                    <ListItemIcon>\n                      {rotateWindArrow(pushWindDirection2)}\n                    </ListItemIcon>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/* Fourth Cell */}\n          <Grid\n            container\n            item\n            xs={6}\n            style={{ maxWidth: \"49.5%\" }}\n            className=\"Card-Item\"\n          >\n            <Grid item xs={4}>\n              <p>{pushTimespot3}</p>\n              <img\n                src={weatherCheck(pushConditionRating3)}\n                alt=\"\"\n                height=\"100px\"\n                width=\"100px\"\n              ></img>\n              <p>{pushTemp3 + \"f\"}</p>\n            </Grid>\n            <Grid container item xs={8}>\n              <Grid item xs={12}>\n                <List>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${pushMinHeight3}-${pushMaxHeight3}ft`}\n                      style={{ float: \"left\" }}\n                    ></ListItemText>\n                    {createStars(pushSolidRating3, pushFadedRating3)}\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Primary Swell\" />\n                    <ListItemText\n                      primary={`${pushPrimaryHeight3}ft at ${pushPrimaryPeriod3}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushPrimaryDirection3)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Secondary Swell\" />\n                    <ListItemText\n                      primary={`${pushSecondaryHeight3}ft at ${pushSecondaryPeriod3}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushSecondaryDirection3)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Wind Direction\" />\n                    <ListItemText primary={`${pushWindSpeed3}mph`} />\n                    <ListItemIcon>\n                      {rotateWindArrow(pushWindDirection3)}\n                    </ListItemIcon>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          {/* Fifth Cell */}\n          <Grid container item xs={12} style={{}} className=\"Card-Item\">\n            <Grid item xs={6}>\n              <p>{pushTimespot4}</p>\n              <img\n                src={weatherCheck(pushConditionRating4)}\n                alt=\"\"\n                height=\"100px\"\n                width=\"100px\"\n              ></img>\n              <p>{pushTemp4 + \"f\"}</p>\n            </Grid>\n            <Grid container item xs={6}>\n              <Grid item xs={12}>\n                <List>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${pushMinHeight4}-${pushMaxHeight4}ft`}\n                      style={{ float: \"left\" }}\n                    ></ListItemText>\n                    {createStars(pushSolidRating4, pushFadedRating4)}\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Primary Swell\" />\n                    <ListItemText\n                      primary={`${pushPrimaryHeight4}ft at ${pushPrimaryPeriod4}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushPrimaryDirection4)}\n                    </ListItemIcon>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemText primary=\"Secondary Swell\" />\n                    <ListItemText\n                      primary={`${pushSecondaryHeight4}ft at ${pushSecondaryPeriod4}s`}\n                    />\n                    <ListItemIcon>\n                      {rotateSwellArrow(pushSecondaryDirection4)}\n                    </ListItemIcon>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemText primary=\"Wind Direction\" />\n                    <ListItemText primary={`${pushWindSpeed4}mph`} />\n                    <ListItemIcon>\n                      {rotateWindArrow(pushWindDirection4)}\n                    </ListItemIcon>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"../../UI/Card/card.jsx\";\n\nimport \"./body.css\";\n\nfunction Body(props) {\n  const { pushSurfSpot, pushMapInfo } = props;\n\n  return (\n    <Card\n      pushDayMonth={pushSurfSpot.dayMonth}\n      pushMap={pushMapInfo}\n      pushTimespot={pushSurfSpot.localTimestamp0}\n      pushConditionRating={pushSurfSpot.conditionRating0}\n      pushFadedRating={pushSurfSpot.fadedRating0}\n      pushSolidRating={pushSurfSpot.solidRating0}\n      pushMinHeight={pushSurfSpot.minBreakingHeight0}\n      pushMaxHeight={pushSurfSpot.maxBreakingHeight0}\n      pushUnit={pushSurfSpot.unit}\n      pushPrimaryHeight={pushSurfSpot.primaryHeight0}\n      pushPrimaryPeriod={pushSurfSpot.primaryPeriod0}\n      pushPrimaryDirection={pushSurfSpot.primaryDirection0}\n      pushPrimaryCompass={pushSurfSpot.primaryCompassDirection0}\n      pushSecondaryHeight={pushSurfSpot.secondaryHeight0}\n      pushSecondaryPeriod={pushSurfSpot.secondaryPeriod0}\n      pushSecondaryDirection={pushSurfSpot.secondaryDirection0}\n      pushSecondaryCompassDirection={pushSurfSpot.secondaryCompassDirection0}\n      pushWindSpeed={pushSurfSpot.windSpeed0}\n      pushWindDirection={pushSurfSpot.windDirection0}\n      pushWindCompass={pushSurfSpot.windCompassDirection0}\n      pushWindChill={pushSurfSpot.windChill0}\n      pushWindUnit={pushSurfSpot.windUnit}\n      pushTemp={pushSurfSpot.temperature0}\n      pushTempUnit={pushSurfSpot.temperatureUnit}\n      pushTimespot1={pushSurfSpot.localTimestamp1}\n      pushConditionRating1={pushSurfSpot.conditionRating1}\n      pushFadedRating1={pushSurfSpot.fadedRating1}\n      pushSolidRating1={pushSurfSpot.solidRating1}\n      pushMinHeight1={pushSurfSpot.minBreakingHeight1}\n      pushMaxHeight1={pushSurfSpot.maxBreakingHeight1}\n      pushUnit1={pushSurfSpot.unit}\n      pushPrimaryHeight1={pushSurfSpot.primaryHeight1}\n      pushPrimaryPeriod1={pushSurfSpot.primaryPeriod1}\n      pushPrimaryDirection1={pushSurfSpot.primaryDirection1}\n      pushPrimaryCompass1={pushSurfSpot.primaryCompassDirection1}\n      pushSecondaryHeight1={pushSurfSpot.secondaryHeight1}\n      pushSecondaryPeriod1={pushSurfSpot.secondaryPeriod1}\n      pushSecondaryDirection1={pushSurfSpot.secondaryDirection1}\n      pushSecondaryCompassDirection1={pushSurfSpot.secondaryCompassDirection1}\n      pushWindSpeed1={pushSurfSpot.windSpeed1}\n      pushWindDirection1={pushSurfSpot.windDirection1}\n      pushWindCompass1={pushSurfSpot.windCompassDirectio1}\n      pushWindChill1={pushSurfSpot.windChill1}\n      pushWindUnit1={pushSurfSpot.windUnit}\n      pushTemp1={pushSurfSpot.temperature1}\n      pushTempUnit1={pushSurfSpot.temperatureUnit}\n      pushTimespot2={pushSurfSpot.localTimestamp2}\n      pushConditionRating2={pushSurfSpot.conditionRating2}\n      pushFadedRating2={pushSurfSpot.fadedRating2}\n      pushSolidRating2={pushSurfSpot.solidRating2}\n      pushMinHeight2={pushSurfSpot.minBreakingHeight2}\n      pushMaxHeight2={pushSurfSpot.maxBreakingHeight2}\n      pushUnit2={pushSurfSpot.unit}\n      pushPrimaryHeight2={pushSurfSpot.primaryHeight2}\n      pushPrimaryPeriod2={pushSurfSpot.primaryPeriod2}\n      pushPrimaryDirection2={pushSurfSpot.primaryDirection2}\n      pushPrimaryCompass2={pushSurfSpot.primaryCompassDirection2}\n      pushSecondaryHeight2={pushSurfSpot.secondaryHeight2}\n      pushSecondaryPeriod2={pushSurfSpot.secondaryPeriod2}\n      pushSecondaryDirection2={pushSurfSpot.secondaryDirection2}\n      pushSecondaryCompassDirection2={pushSurfSpot.secondaryCompassDirection2}\n      pushWindSpeed2={pushSurfSpot.windSpeed2}\n      pushWindDirection2={pushSurfSpot.windDirection2}\n      pushWindCompass2={pushSurfSpot.windCompassDirection2}\n      pushWindChill2={pushSurfSpot.windChill2}\n      pushWindUnit2={pushSurfSpot.windUnit}\n      pushTemp2={pushSurfSpot.temperature2}\n      pushTempUnit2={pushSurfSpot.temperatureUnit}\n      pushTimespot3={pushSurfSpot.localTimestamp3}\n      pushConditionRating3={pushSurfSpot.conditionRating3}\n      pushFadedRating3={pushSurfSpot.fadedRating3}\n      pushSolidRating3={pushSurfSpot.solidRating3}\n      pushMinHeight3={pushSurfSpot.minBreakingHeight3}\n      pushMaxHeight3={pushSurfSpot.maxBreakingHeight3}\n      pushUnit3={pushSurfSpot.unit}\n      pushPrimaryHeight3={pushSurfSpot.primaryHeight3}\n      pushPrimaryPeriod3={pushSurfSpot.primaryPeriod3}\n      pushPrimaryDirection3={pushSurfSpot.primaryDirection3}\n      pushPrimaryCompass3={pushSurfSpot.primaryCompassDirection3}\n      pushSecondaryHeight3={pushSurfSpot.secondaryHeight3}\n      pushSecondaryPeriod3={pushSurfSpot.secondaryPeriod3}\n      pushSecondaryDirection3={pushSurfSpot.secondaryDirection3}\n      pushSecondaryCompassDirection3={pushSurfSpot.secondaryCompassDirection3}\n      pushWindSpeed3={pushSurfSpot.windSpeed3}\n      pushWindDirection3={pushSurfSpot.windDirection3}\n      pushWindCompass3={pushSurfSpot.windCompassDirection3}\n      pushWindChill3={pushSurfSpot.windChill3}\n      pushWindUnit3={pushSurfSpot.windUnit}\n      pushTemp3={pushSurfSpot.temperature3}\n      pushTempUnit3={pushSurfSpot.temperatureUnit}\n      pushTimespot4={pushSurfSpot.localTimestamp4}\n      pushConditionRating4={pushSurfSpot.conditionRating4}\n      pushFadedRating4={pushSurfSpot.fadedRating4}\n      pushSolidRating4={pushSurfSpot.solidRating4}\n      pushMinHeight4={pushSurfSpot.minBreakingHeight4}\n      pushMaxHeight4={pushSurfSpot.maxBreakingHeight4}\n      pushUnit4={pushSurfSpot.unit}\n      pushPrimaryHeight4={pushSurfSpot.primaryHeight4}\n      pushPrimaryPeriod4={pushSurfSpot.primaryPeriod4}\n      pushPrimaryDirection4={pushSurfSpot.primaryDirection4}\n      pushPrimaryCompass4={pushSurfSpot.primaryCompassDirection4}\n      pushSecondaryHeight4={pushSurfSpot.secondaryHeight4}\n      pushSecondaryPeriod4={pushSurfSpot.secondaryPeriod4}\n      pushSecondaryDirection4={pushSurfSpot.secondaryDirection4}\n      pushSecondaryCompassDirection4={pushSurfSpot.secondaryCompassDirection4}\n      pushWindSpeed4={pushSurfSpot.windSpeed4}\n      pushWindDirection4={pushSurfSpot.windDirection4}\n      pushWindCompass4={pushSurfSpot.windCompassDirection4}\n      pushWindChill4={pushSurfSpot.windChill4}\n      pushWindUnit4={pushSurfSpot.windUnit}\n      pushTemp4={pushSurfSpot.temperature4}\n      pushTempUnit4={pushSurfSpot.temperatureUnit}\n    />\n  );\n}\n\nexport default Body;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport Header from \"./Components/Layout/Header/header.jsx\";\nimport Body from \"./Components/Layout/Body/body.jsx\";\n\nimport \"./App.css\";\n\nfunction getHours(time) {\n  const unixTimestamp = time;\n\n  const milliseconds = unixTimestamp * 1000;\n\n  const dateObject = new Date(milliseconds);\n\n  var hours =\n    dateObject.getHours() > 12\n      ? dateObject.getHours() - 12\n      : dateObject.getHours();\n\n  var am_pm = dateObject.getHours() >= 12 ? \"PM\" : \"AM\";\n  // hours = hours < 10 ? \"0\" + hours : hours;\n\n  return `${hours} ${am_pm}`;\n}\n\nfunction getDayMonth(time) {\n  const unixTimestamp = time;\n\n  const milliseconds = unixTimestamp * 1000;\n\n  const dateObject = new Date(milliseconds);\n\n  const day = dateObject.getDate();\n\n  const month = dateObject.getMonth();\n\n  //When it hit's January\n  if (month === 0) {\n    return `1/${day}`;\n  }\n\n  return `${month}/${day}`;\n}\n\nfunction App() {\n  const [spotID, setspotID] = useState(\"Default\");\n  const [surfSpot, setSurfSpot] = useState({\n    dayMonth: \"\",\n\n    localTimestamp0: 0,\n    localTimestamp1: 0,\n    localTimestamp2: 0,\n    localTimestamp3: 0,\n    localTimestamp4: 0,\n    conditionRating0: 0,\n    conditionRating1: 0,\n    conditionRating2: 0,\n    conditionRating3: 0,\n    conditionRating4: 0,\n\n    fadedRating0: 0,\n    fadedRating1: 0,\n    fadedRating2: 0,\n    fadedRating3: 0,\n    fadedRating4: 0,\n    solidRating0: 0,\n    solidRating1: 0,\n    solidRating2: 0,\n    solidRating3: 0,\n    solidRating4: 0,\n    minBreakingHeight0: 0,\n    minBreakingHeight1: 0,\n    minBreakingHeight2: 0,\n    minBreakingHeight3: 0,\n    minBreakingHeight4: 0,\n    maxBreakingHeight0: 0,\n    maxBreakingHeight1: 0,\n    maxBreakingHeight2: 0,\n    maxBreakingHeight3: 0,\n    maxBreakingHeight4: 0,\n    unit: \"ft\",\n    primaryHeight0: 0,\n    primaryHeight1: 0,\n    primaryHeight2: 0,\n    primaryHeight3: 0,\n    primaryHeight4: 0,\n    primaryPeriod0: 0,\n    primaryPeriod1: 0,\n    primaryPeriod2: 0,\n    primaryPeriod3: 0,\n    primaryPeriod4: 0,\n    primaryDirection0: 0,\n    primaryDirection1: 0,\n    primaryDirection2: 0,\n    primaryDirection3: 0,\n    primaryDirection4: 0,\n    primaryCompassDirection0: \"\",\n    primaryCompassDirection1: \"\",\n    primaryCompassDirection2: \"\",\n    primaryCompassDirection3: \"\",\n    primaryCompassDirection4: \"\",\n    secondaryHeight0: 0,\n    secondaryHeight1: 0,\n    secondaryHeight2: 0,\n    secondaryHeight3: 0,\n    secondaryHeight4: 0,\n    secondaryPeriod0: 0,\n    secondaryPeriod1: 0,\n    secondaryPeriod2: 0,\n    secondaryPeriod3: 0,\n    secondaryPeriod4: 0,\n    secondaryDirection0: 0,\n    secondaryDirection1: 0,\n    secondaryDirection2: 0,\n    secondaryDirection3: 0,\n    secondaryDirection4: 0,\n    secondaryCompassDirection0: \"\",\n    secondaryCompassDirection1: \"\",\n    secondaryCompassDirection2: \"\",\n    secondaryCompassDirection3: \"\",\n    secondaryCompassDirection4: \"\",\n    windSpeed0: 0,\n    windSpeed1: 0,\n    windSpeed2: 0,\n    windSpeed3: 0,\n    windSpeed4: 0,\n    windDirection0: 0,\n    windDirection1: 0,\n    windDirection2: 0,\n    windDirection3: 0,\n    windDirection4: 0,\n    windCompassDirection0: 0,\n    windCompassDirection1: 0,\n    windCompassDirection2: 0,\n    windCompassDirection3: 0,\n    windCompassDirection4: 0,\n    windChill0: 0,\n    windChill1: 0,\n    windChill2: 0,\n    windChill3: 0,\n    windChill4: 0,\n    windUnit: \"mph\",\n    temperature0: 0,\n    temperature1: 0,\n    temperature2: 0,\n    temperature3: 0,\n    temperature4: 0,\n    temperatureUnit: 0,\n  });\n\n  const [mapInfo, setMapInfo] = useState({\n    latitude: 0,\n    longitude: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zoom: 10,\n  });\n\n  //For MSW API\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const proxyURL = \"https://morning-refuge-88650.herokuapp.com/\";\n        const realURL = `http://magicseaweed.com/api/${process.env.REACT_APP_MSW}/forecast/?spot_id=${spotID.id}&units=us`;\n        const data = await fetch(proxyURL + realURL);\n        const response = await data.json();\n\n        setSurfSpot({\n          dayMonth: getDayMonth(response[4].localTimestamp),\n          localTimestamp0: getHours(response[4].localTimestamp),\n          localTimestamp1: getHours(response[5].localTimestamp),\n          localTimestamp2: getHours(response[6].localTimestamp),\n          localTimestamp3: getHours(response[7].localTimestamp),\n          localTimestamp4: getHours(response[8].localTimestamp),\n          fadedRating0: response[4].fadedRating,\n          fadedRating1: response[5].fadedRating,\n          fadedRating2: response[6].fadedRating,\n          fadedRating3: response[7].fadedRating,\n          fadedRating4: response[8].fadedRating,\n          solidRating0: response[4].solidRating,\n          solidRating1: response[5].solidRating,\n          solidRating2: response[6].solidRating,\n          solidRating3: response[7].solidRating,\n          solidRating4: response[8].solidRating,\n          minBreakingHeight0: response[4].swell.minBreakingHeight,\n          minBreakingHeight1: response[5].swell.minBreakingHeight,\n          minBreakingHeight2: response[6].swell.minBreakingHeight,\n          minBreakingHeight3: response[7].swell.minBreakingHeight,\n          minBreakingHeight4: response[8].swell.minBreakingHeight,\n          maxBreakingHeight0: response[4].swell.maxBreakingHeight,\n          maxBreakingHeight1: response[5].swell.maxBreakingHeight,\n          maxBreakingHeight2: response[6].swell.maxBreakingHeight,\n          maxBreakingHeight3: response[7].swell.maxBreakingHeight,\n          maxBreakingHeight4: response[8].swell.maxBreakingHeight,\n          unit: \"ft\",\n          primaryHeight0: response[4].swell.components.primary.height,\n          primaryHeight1: response[5].swell.components.primary.height,\n          primaryHeight2: response[6].swell.components.primary.height,\n          primaryHeight3: response[7].swell.components.primary.height,\n          primaryHeight4: response[8].swell.components.primary.height,\n          primaryPeriod0: response[4].swell.components.primary.period,\n          primaryPeriod1: response[5].swell.components.primary.period,\n          primaryPeriod2: response[6].swell.components.primary.period,\n          primaryPeriod3: response[7].swell.components.primary.period,\n          primaryPeriod4: response[8].swell.components.primary.period,\n          primaryDirection0: response[4].swell.components.primary.direction,\n          primaryDirection1: response[5].swell.components.primary.direction,\n          primaryDirection2: response[6].swell.components.primary.direction,\n          primaryDirection3: response[7].swell.components.primary.direction,\n          primaryDirection4: response[8].swell.components.primary.direction,\n          primaryCompassDirection0:\n            response[4].swell.components.primary.compassDirection,\n          primaryCompassDirection1:\n            response[5].swell.components.primary.compassDirection,\n          primaryCompassDirection2:\n            response[6].swell.components.primary.compassDirection,\n          primaryCompassDirection3:\n            response[7].swell.components.primary.compassDirection,\n          primaryCompassDirection4:\n            response[8].swell.components.primary.compassDirection,\n          secondaryHeight0: response[4].swell.components.secondary.height,\n          secondaryHeight1: response[5].swell.components.secondary.height,\n          secondaryHeight2: response[6].swell.components.secondary.height,\n          secondaryHeight3: response[7].swell.components.secondary.height,\n          secondaryHeight4: response[8].swell.components.secondary.height,\n          secondaryPeriod0: response[4].swell.components.secondary.period,\n          secondaryPeriod1: response[5].swell.components.secondary.period,\n          secondaryPeriod2: response[6].swell.components.secondary.period,\n          secondaryPeriod3: response[7].swell.components.secondary.period,\n          secondaryPeriod4: response[8].swell.components.secondary.period,\n          secondaryDirection0: response[4].swell.components.secondary.direction,\n          secondaryDirection1: response[5].swell.components.secondary.direction,\n          secondaryDirection2: response[6].swell.components.secondary.direction,\n          secondaryDirection3: response[7].swell.components.secondary.direction,\n          secondaryDirection4: response[8].swell.components.secondary.direction,\n          secondaryCompassDirection0:\n            response[4].swell.components.secondary.compassDirection,\n          secondaryCompassDirection1:\n            response[5].swell.components.secondary.compassDirection,\n          secondaryCompassDirection2:\n            response[6].swell.components.secondary.compassDirection,\n          secondaryCompassDirection3:\n            response[7].swell.components.secondary.compassDirection,\n          secondaryCompassDirection4:\n            response[8].swell.components.secondary.compassDirection,\n          windSpeed0: response[4].wind.speed,\n          windSpeed1: response[5].wind.speed,\n          windSpeed2: response[6].wind.speed,\n          windSpeed3: response[7].wind.speed,\n          windSpeed4: response[8].wind.speed,\n          windDirection0: response[4].wind.direction,\n          windDirection1: response[5].wind.direction,\n          windDirection2: response[6].wind.direction,\n          windDirection3: response[7].wind.direction,\n          windDirection4: response[8].wind.direction,\n          windCompassDirection0: response[4].wind.compassDirection,\n          windCompassDirection1: response[5].wind.compassDirection,\n          windCompassDirection2: response[6].wind.compassDirection,\n          windCompassDirection3: response[7].wind.compassDirection,\n          windCompassDirection4: response[8].wind.compassDirection,\n          windChill0: response[4].wind.chill,\n          windChill1: response[5].wind.chill,\n          windChill2: response[6].wind.chill,\n          windChill3: response[7].wind.chill,\n          windChill4: response[8].wind.chill,\n          windUnit: \"mph\",\n          temperature0: response[4].condition.temperature,\n          temperature1: response[5].condition.temperature,\n          temperature2: response[6].condition.temperature,\n          temperature3: response[7].condition.temperature,\n          temperature4: response[8].condition.temperature,\n          temperatureUnit: \"c\",\n          conditionRating0: response[4].condition.weather,\n          conditionRating1: response[5].condition.weather,\n          conditionRating2: response[6].condition.weather,\n          conditionRating3: response[7].condition.weather,\n          conditionRating4: response[8].condition.weather,\n        });\n        console.log(response);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, [spotID]);\n\n  //Returns Info from the Dropdown\n  function searchCallBackFunction(childData) {\n    setspotID(childData);\n    setMapInfo({\n      ...mapInfo,\n      latitude: childData.latitude,\n      longitude: childData.longitude,\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Header onHeaderChange={searchCallBackFunction} />\n        {/* If latitude is false, do not display body  */}\n        {/* {mapInfo.latitude ? ( */}\n        <Body pushSurfSpot={surfSpot} pushMapInfo={mapInfo} />\n        {/* ) : (\n          <div></div>\n        )} */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}